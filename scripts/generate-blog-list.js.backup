const fs = require('fs');
const path = require('path');
const matter = require('gray-matter');

// 定义博客文件夹路径
const blogDir = './public/blogs/';
const blogList = [];

// 生成2023年随机日期的函数
function getRandomDateIn2023() {
    const start = new Date(2023, 0, 1);  // 2023年1月1日
    const end = new Date(2023, 11, 31);  // 2023年12月31日
    const date = new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));
    return date.toISOString().split('T')[0];  // 格式化为 'YYYY-MM-DD'
}

// 读取博客文件夹中的所有Markdown文件
fs.readdirSync(blogDir).forEach(folder => {
    const filePath = path.join(blogDir, folder, 'index.md');

    if (fs.existsSync(filePath)) {
        // 读取Markdown文件的内容
        const fileContent = fs.readFileSync(filePath, 'utf-8');

        // 使用gray-matter提取frontmatter数据和正文内容
        const { data, content } = matter(fileContent);

        // 将提取的数据添加到博客列表中
        blogList.push({
            folderName: folder,  // 保存文件夹名称
            title: data.title || folder,
            date: data.date || getRandomDateIn2023(),
            author: data.author || '李 小燕',
            tags: data.tags || [],
            category: data.category || 'House',
            description: data.description || content.slice(0, 100), // 如果没有描述，用内容前100字符作为摘要
            url: `/blogs/${folder}/index.md`
        });
    }
});

// 将博客列表排序，按日期降序排列
blogList.sort((a, b) => new Date(b.date) - new Date(a.date));

// 将生成的博客列表写入JSON文件
fs.writeFileSync('./public/blogs/blog-list.json', JSON.stringify(blogList, null, 2));

console.log('博客元数据已成功提取并生成至 blog-list.json');
